CREATE OR REPLACE PROCEDURE ADD_FACULTY(
	USERNAME_ IN VARCHAR, 
	EMAIL_ID_ IN VARCHAR,
	PASSWORD_ IN VARCHAR,
	DEPT_NO_ IN NUMBER, 
	NAME_ IN VARCHAR)
IS
BEGIN
	INSERT INTO FACULTY VALUES(USERNAME_, EMAIL_ID_, PASSWORD_,
	DEPT_NO_, NAME_);
END;
/

CREATE OR REPLACE PROCEDURE ADD_DEPARTMENT(
	DEPT_NO_ NUMBER,
	DEPARTMENT_NAME_ VARCHAR)
IS
BEGIN
	INSERT INTO DEPARTMENTS VALUES(DEPT_NO_, DEPARTMENT_NAME_);
END;
/

CREATE OR REPLACE PROCEDURE LOGIN(
	USERNAME_ IN VARCHAR,
	PASSWORD_ IN VARCHAR)
IS
	CURSOR AUTHENTICATION IS SELECT * FROM FACULTY;
	RECORD FACULTY%ROWTYPE;
	FLAG NUMBER := 0;
BEGIN
	OPEN AUTHENTICATION;
	LOOP
		EXIT WHEN AUTHENTICATION%NOTFOUND;
		FETCH AUTHENTICATION INTO RECORD;
		IF UPPER(RECORD.USERNAME) = UPPER(USERNAME_) AND 
		RECORD.PASSWORD = PASSWORD_ THEN
			DBMS_OUTPUT.PUT_LINE('LOGIN SUCCESSFULL');
			FLAG := 1;
		END IF;
	END LOOP;
	CLOSE AUTHENTICATION;
	IF FLAG = 0 THEN
		DBMS_OUTPUT.PUT_LINE('INVALID USERNAME OR PASSWORD');
	END IF;
END;
/

CREATE OR REPLACE PROCEDURE SHOW_BOOKINGS(
	USER VARCHAR)
IS
	ONE_ROW BOOKED_ROOMS%ROWTYPE;
	CURSOR ALL_ROWS IS SELECT * FROM BOOKED_ROOMS WHERE 
	UPPER(USERNAME) = UPPER(USER); 
BEGIN
	OPEN ALL_ROWS;
	LOOP
		FETCH ALL_ROWS INTO ONE_ROW;
		EXIT WHEN ALL_ROWS%NOTFOUND;
		DBMS_OUTPUT.PUT_LINE(ONE_ROW.DATE_OF_BOOKING || ' ' || 
		ONE_ROW.TIME_SLOT || ' ' || ONE_ROW.ROOM_NAME);
	END LOOP;
	IF ALL_ROWS%ROWCOUNT = 0 THEN
		DBMS_OUTPUT.PUT_LINE('SORRY! YOU HAVE NO BOOKINGS');
	END IF;
	CLOSE ALL_ROWS;
END;
/

CREATE OR REPLACE PROCEDURE SHOW_AVAILABLE_ROOMS(
	DATE_ DATE,
	TIME_SLOT_ VARCHAR)
IS
	CURSOR AVAILABLE_ROOMS IS SELECT ROOM_NAME FROM USED_ROOMS 
	WHERE UPPER(DAY) = TO_CHAR(DATE_,'FMDAY') AND TIME_SLOT = 
	TIME_SLOT_ AND IS_AVAILABLE = 1 AND	ROOM_NAME NOT IN 
	(SELECT ROOM_NAME FROM BOOKED_ROOMS WHERE 
	TO_CHAR(DATE_OF_BOOKING) = TO_CHAR(DATE_) AND TIME_SLOT =
	TIME_SLOT_);
	ONE_ROOM BOOKED_ROOMS.ROOM_NAME%TYPE;
BEGIN
	OPEN AVAILABLE_ROOMS;
	LOOP
		FETCH AVAILABLE_ROOMS INTO ONE_ROOM;
		EXIT WHEN AVAILABLE_ROOMS%NOTFOUND;
		DBMS_OUTPUT.PUT_LINE(ONE_ROOM);
	END LOOP;
	IF(AVAILABlE_ROOMS%ROWCOUNT = 0) THEN
		DBMS_OUTPUT.PUT_LINE('SORRY! NO ROOMS AVAILABLE FOR 
		SELECTED SLOT');
	END IF;
	CLOSE AVAILABLE_ROOMS;
END;
/


CREATE OR REPLACE PROCEDURE BOOK_A_ROOM(DATE_ DATE,
	TIME_SLOT_ VARCHAR,
	ROOM VARCHAR,
	USER VARCHAR)
IS
	CURSOR AVAILABLE_ROOMS IS SELECT ROOM_NAME FROM USED_ROOMS
	WHERE UPPER(DAY) = TO_CHAR(DATE_,'FMDAY') AND TIME_SLOT = 
	TIME_SLOT_ AND IS_AVAILABLE = 1 AND ROOM_NAME NOT IN 
	(SELECT ROOM_NAME FROM BOOKED_ROOMS WHERE 
	TO_CHAR(DATE_OF_BOOKING) = TO_CHAR(DATE_) AND TIME_SLOT =
	TIME_SLOT_);
	ONE_ROOM BOOKED_ROOMS.ROOM_NAME%TYPE;
	NUMBER_OF_ROOMS NUMBER;
	FLAG NUMBER := 0;
BEGIN
	SELECT COUNT(ROOM_NAME) INTO NUMBER_OF_ROOMS FROM USED_ROOMS
	WHERE UPPER(DAY) = TO_CHAR(DATE_,'FMDAY') AND TIME_SLOT = 
	TIME_SLOT_ AND IS_AVAILABLE = 1 AND ROOM_NAME NOT IN 
	(SELECT ROOM_NAME FROM BOOKED_ROOMS WHERE 
	TO_CHAR(DATE_OF_BOOKING) = TO_CHAR(DATE_) AND TIME_SLOT = 
	TIME_SLOT_);
	IF NUMBER_OF_ROOMS = 0 THEN
		DBMS_OUTPUT.PUT_LINE('SORRY! NO ROOMS AVAILABLE FOR SELECTED 
		SLOT');
	END IF;
	OPEN AVAILABLE_ROOMS;
	LOOP
		FETCH AVAILABLE_ROOMS INTO ONE_ROOM;
		EXIT WHEN AVAILABLE_ROOMS%NOTFOUND;
		IF ONE_ROOM = ROOM THEN
			INSERT INTO BOOKED_ROOMS VALUES(DATE_, TIME_SLOT_, ROOM, 
			LOWER(USER));
			FLAG := 1;
		END IF;
	END LOOP;
	CLOSE AVAILABLE_ROOMS;
	IF FLAG = 0 THEN
		DBMS_OUTPUT.PUT_LINE('INVALID ROOM ENTERED');
	END IF;
END;
/
